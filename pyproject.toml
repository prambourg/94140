[project]
name = "flask-aws"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "flask-admin>=1.6.1",
    "flask>=3.1.0",
    "flask-login>=0.6.3",
    "flask-babel>=4.0.0",
    "flask-cors>=5.0.0",
    "flask-sqlalchemy>=3.1.1",
    "retry>=0.9.2",
    "flask-pydantic>=0.12.0",
    "plum-dispatch>=2.5.3",
    "requests>=2.32.3",
    "helloasso-apiv5>=1.0.0",
    "pytest>=8.3.3",
    "pytest-flask>=1.3.0",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D100","D101", "D102","D103","D104","D105",
    "T201", # print
    "FA102", # from __futur__ import annotation
    "CPY001", # copyright at the beginning of any file
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.ruff]
line-length = 120
preview = true

[tool.ruff.format]
quote-style = "double"

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
]
